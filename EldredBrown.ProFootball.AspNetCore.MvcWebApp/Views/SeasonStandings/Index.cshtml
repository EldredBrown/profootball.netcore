@model SeasonStandingsIndexViewModel

@{
    ViewBag.Title = Model.Title;
}

<h1>@Model.Title</h1>

<form>
    <p>
        <label class="col-form-label">Season</label>
        @Html.DropDownList("Seasons", null, htmlAttributes: new
        {
            @onchange = "document.location.href='/SeasonStandings/SetSelectedSeasonId?SeasonId=' + this.options[this.selectedIndex].value;"
        })
    </p>
    @*<p>
        <label class="form-check-label">
            @Html.CheckBox("GroupByDivision", htmlAttributes: new
            {
                @onchange = "document.location.href='/SeasonStandings/SetGroupByDivision?GroupByDivision=' + this.checked;"
            })
            <label class="col-form-label">Group by Division</label>
        </label>
    </p>*@
</form>

@{
    var previousConference = string.Empty;
    var previousDivision = string.Empty;
}

<table class="table table-bordered table-striped">
    <thead>
        <tr>
            <th>
                Team
            </th>
            <th class="text-right">
                W
            </th>
            <th class="text-right">
                L
            </th>
            <th class="text-right">
                T
            </th>
            <th class="text-right">
                Pct.
            </th>
            <th class="text-right">
                PF
            </th>
            <th class="text-right">
                PA
            </th>
            <th class="text-right">
                AvgPF
            </th>
            <th class="text-right">
                AvgPA
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.SeasonStandings)
        {
            if (!string.IsNullOrEmpty(item.Conference) && item.Conference != previousConference)
            {
                <tr>
                    <th>
                        @Html.DisplayFor(modelItem => item.Conference)
                    </th>
                </tr>

                previousConference = item.Conference;
            }
            if (ViewBag.GroupByDivision == true &&
                !string.IsNullOrEmpty(item.Division) &&
                item.Division != previousDivision)
            {
                <tr>
                    <th>
                        @Html.DisplayFor(modelItem => item.Division)
                    </th>
                </tr>

                previousDivision = item.Division;
            }
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Team)
                </td>
                <td class="text-right">
                    @Html.DisplayFor(modelItem => item.Wins)
                </td>
                <td class="text-right">
                    @Html.DisplayFor(modelItem => item.Losses)
                </td>
                <td class="text-right">
                    @Html.DisplayFor(modelItem => item.Ties)
                </td>
                <td class="text-right">
                    @Html.DisplayFor(modelItem => item.WinningPercentage)
                </td>
                <td class="text-right">
                    @Html.DisplayFor(modelItem => item.PointsFor)
                </td>
                <td class="text-right">
                    @Html.DisplayFor(modelItem => item.PointsAgainst)
                </td>
                <td class="text-right">
                    @Html.DisplayFor(modelItem => item.AvgPointsFor)
                </td>
                <td class="text-right">
                    @Html.DisplayFor(modelItem => item.AvgPointsAgainst)
                </td>
            </tr>
        }
    </tbody>
</table>

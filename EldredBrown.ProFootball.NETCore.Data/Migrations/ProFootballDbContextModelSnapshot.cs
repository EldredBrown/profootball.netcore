// <auto-generated />
using System;
using EldredBrown.ProFootball.NETCore.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EldredBrown.ProFootball.NETCore.Data.Migrations
{
    [DbContext(typeof(ProFootballDbContext))]
    partial class ProFootballDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EldredBrown.ProFootball.NETCore.Data.Entities.Conference", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FirstSeasonId")
                        .HasColumnType("int");

                    b.Property<int?>("LastSeasonId")
                        .HasColumnType("int");

                    b.Property<string>("LeagueName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LongName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Conferences");
                });

            modelBuilder.Entity("EldredBrown.ProFootball.NETCore.Data.Entities.Division", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConferenceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FirstSeasonId")
                        .HasColumnType("int");

                    b.Property<int?>("LastSeasonId")
                        .HasColumnType("int");

                    b.Property<string>("LeagueName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Divisions");
                });

            modelBuilder.Entity("EldredBrown.ProFootball.NETCore.Data.Entities.Game", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GuestName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GuestScore")
                        .HasColumnType("int");

                    b.Property<string>("HostName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HostScore")
                        .HasColumnType("int");

                    b.Property<bool>("IsPlayoffGame")
                        .HasColumnType("bit");

                    b.Property<string>("LoserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LoserScore")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SeasonId")
                        .HasColumnType("int");

                    b.Property<int>("Week")
                        .HasColumnType("int");

                    b.Property<string>("WinnerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WinnerScore")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Games");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            GuestName = "St. Paul Ideals",
                            GuestScore = 0,
                            HostName = "Rock Island Independents",
                            HostScore = 48,
                            IsPlayoffGame = false,
                            SeasonId = 1920,
                            Week = 1
                        },
                        new
                        {
                            ID = 2,
                            GuestName = "Pitcairn Quakers",
                            GuestScore = 0,
                            HostName = "Canton Bulldogs",
                            HostScore = 48,
                            IsPlayoffGame = false,
                            SeasonId = 1920,
                            Week = 2
                        },
                        new
                        {
                            ID = 3,
                            GuestName = "West Buffalo",
                            GuestScore = 6,
                            HostName = "Buffalo All-Americans",
                            HostScore = 32,
                            IsPlayoffGame = false,
                            SeasonId = 1920,
                            Week = 2
                        },
                        new
                        {
                            ID = 4,
                            GuestName = "Wheeling Stogies",
                            GuestScore = 0,
                            HostName = "Akron Pros",
                            HostScore = 43,
                            IsPlayoffGame = false,
                            SeasonId = 1920,
                            Week = 2
                        },
                        new
                        {
                            ID = 5,
                            GuestName = "Muncie Flyers",
                            GuestScore = 0,
                            HostName = "Rock Island Independents",
                            HostScore = 45,
                            IsPlayoffGame = false,
                            SeasonId = 1920,
                            Week = 2
                        },
                        new
                        {
                            ID = 6,
                            GuestName = "All Buffalo",
                            GuestScore = 0,
                            HostName = "Rochester Jeffersons",
                            HostScore = 10,
                            IsPlayoffGame = false,
                            SeasonId = 1920,
                            Week = 2
                        },
                        new
                        {
                            ID = 7,
                            GuestName = "Columbus Panhandles",
                            GuestScore = 0,
                            HostName = "Dayton Triangles",
                            HostScore = 14,
                            IsPlayoffGame = false,
                            SeasonId = 1920,
                            Week = 2
                        },
                        new
                        {
                            ID = 8,
                            GuestName = "Moline Universal Tractors",
                            GuestScore = 0,
                            HostName = "Decatur Staleys",
                            HostScore = 20,
                            IsPlayoffGame = false,
                            SeasonId = 1920,
                            Week = 2
                        });
                });

            modelBuilder.Entity("EldredBrown.ProFootball.NETCore.Data.Entities.League", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FirstSeasonId")
                        .HasColumnType("int");

                    b.Property<int?>("LastSeasonId")
                        .HasColumnType("int");

                    b.Property<string>("LongName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.HasKey("ID");

                    b.ToTable("Leagues");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            FirstSeasonId = 1920,
                            LastSeasonId = 1921,
                            LongName = "American Professional Football Association",
                            ShortName = "APFA"
                        });
                });

            modelBuilder.Entity("EldredBrown.ProFootball.NETCore.Data.Entities.LeagueSeason", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("AveragePoints")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("LeagueName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SeasonId")
                        .HasColumnType("int");

                    b.Property<int>("TotalGames")
                        .HasColumnType("int");

                    b.Property<int>("TotalPoints")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("LeagueSeasons");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            LeagueName = "American Professional Football Association",
                            SeasonId = 1920,
                            TotalGames = 0,
                            TotalPoints = 0
                        },
                        new
                        {
                            ID = 2,
                            LeagueName = "American Professional Football Association",
                            SeasonId = 1921,
                            TotalGames = 0,
                            TotalPoints = 0
                        });
                });

            modelBuilder.Entity("EldredBrown.ProFootball.NETCore.Data.Entities.Season", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("NumOfWeeks")
                        .HasColumnType("int");

                    b.Property<int>("NumOfWeeksCompleted")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Seasons");

                    b.HasData(
                        new
                        {
                            ID = 1920,
                            NumOfWeeks = 13,
                            NumOfWeeksCompleted = 0
                        },
                        new
                        {
                            ID = 1921,
                            NumOfWeeks = 13,
                            NumOfWeeksCompleted = 0
                        });
                });

            modelBuilder.Entity("EldredBrown.ProFootball.NETCore.Data.Entities.Team", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Teams");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "Akron Pros"
                        },
                        new
                        {
                            ID = 2,
                            Name = "Buffalo All-Americans"
                        },
                        new
                        {
                            ID = 3,
                            Name = "Canton Bulldogs"
                        },
                        new
                        {
                            ID = 4,
                            Name = "Chicago Cardinals"
                        },
                        new
                        {
                            ID = 5,
                            Name = "Chicago Tigers"
                        },
                        new
                        {
                            ID = 6,
                            Name = "Cleveland Tigers"
                        },
                        new
                        {
                            ID = 7,
                            Name = "Columbus Panhandles"
                        },
                        new
                        {
                            ID = 8,
                            Name = "Dayton Triangles"
                        },
                        new
                        {
                            ID = 9,
                            Name = "Decatur Staleys"
                        },
                        new
                        {
                            ID = 10,
                            Name = "Detroit Heralds"
                        },
                        new
                        {
                            ID = 11,
                            Name = "Hammond Pros"
                        },
                        new
                        {
                            ID = 12,
                            Name = "Muncie Flyers"
                        },
                        new
                        {
                            ID = 13,
                            Name = "Rochester Jeffersons"
                        },
                        new
                        {
                            ID = 14,
                            Name = "Rock Island Independents"
                        },
                        new
                        {
                            ID = 15,
                            Name = "Chicago Staleys"
                        },
                        new
                        {
                            ID = 16,
                            Name = "Cincinnati Celts"
                        },
                        new
                        {
                            ID = 17,
                            Name = "Cleveland Indians"
                        },
                        new
                        {
                            ID = 18,
                            Name = "Detroit Tigers"
                        },
                        new
                        {
                            ID = 19,
                            Name = "Evansville Crimson Giants"
                        },
                        new
                        {
                            ID = 20,
                            Name = "Green Bay Packers"
                        },
                        new
                        {
                            ID = 21,
                            Name = "Louisville Brocks"
                        },
                        new
                        {
                            ID = 22,
                            Name = "Minneapolis Marines"
                        },
                        new
                        {
                            ID = 23,
                            Name = "New York Brickley Giants"
                        },
                        new
                        {
                            ID = 24,
                            Name = "Tonawanda Kardex"
                        },
                        new
                        {
                            ID = 25,
                            Name = "Washington Senators"
                        });
                });

            modelBuilder.Entity("EldredBrown.ProFootball.NETCore.Data.Entities.TeamSeason", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConferenceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("DefensiveAverage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("DefensiveFactor")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("DefensiveIndex")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("DivisionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("FinalPythagoreanWinningPercentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Games")
                        .HasColumnType("int");

                    b.Property<string>("LeagueName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Losses")
                        .HasColumnType("int");

                    b.Property<decimal?>("OffensiveAverage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OffensiveFactor")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OffensiveIndex")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PointsAgainst")
                        .HasColumnType("int");

                    b.Property<int>("PointsFor")
                        .HasColumnType("int");

                    b.Property<decimal>("PythagoreanLosses")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PythagoreanWins")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SeasonId")
                        .HasColumnType("int");

                    b.Property<string>("TeamName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Ties")
                        .HasColumnType("int");

                    b.Property<decimal?>("WinningPercentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Wins")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("TeamSeasons");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Games = 0,
                            LeagueName = "American Professional Football Association",
                            Losses = 0,
                            PointsAgainst = 0,
                            PointsFor = 0,
                            PythagoreanLosses = 0m,
                            PythagoreanWins = 0m,
                            SeasonId = 1920,
                            TeamName = "Akron Pros",
                            Ties = 0,
                            Wins = 0
                        },
                        new
                        {
                            ID = 2,
                            Games = 0,
                            LeagueName = "American Professional Football Association",
                            Losses = 0,
                            PointsAgainst = 0,
                            PointsFor = 0,
                            PythagoreanLosses = 0m,
                            PythagoreanWins = 0m,
                            SeasonId = 1920,
                            TeamName = "Buffalo All-Americans",
                            Ties = 0,
                            Wins = 0
                        },
                        new
                        {
                            ID = 3,
                            Games = 0,
                            LeagueName = "American Professional Football Association",
                            Losses = 0,
                            PointsAgainst = 0,
                            PointsFor = 0,
                            PythagoreanLosses = 0m,
                            PythagoreanWins = 0m,
                            SeasonId = 1920,
                            TeamName = "Canton Bulldogs",
                            Ties = 0,
                            Wins = 0
                        },
                        new
                        {
                            ID = 4,
                            Games = 0,
                            LeagueName = "American Professional Football Association",
                            Losses = 0,
                            PointsAgainst = 0,
                            PointsFor = 0,
                            PythagoreanLosses = 0m,
                            PythagoreanWins = 0m,
                            SeasonId = 1920,
                            TeamName = "Chicago Cardinals",
                            Ties = 0,
                            Wins = 0
                        },
                        new
                        {
                            ID = 5,
                            Games = 0,
                            LeagueName = "American Professional Football Association",
                            Losses = 0,
                            PointsAgainst = 0,
                            PointsFor = 0,
                            PythagoreanLosses = 0m,
                            PythagoreanWins = 0m,
                            SeasonId = 1920,
                            TeamName = "Chicago Tigers",
                            Ties = 0,
                            Wins = 0
                        },
                        new
                        {
                            ID = 6,
                            Games = 0,
                            LeagueName = "American Professional Football Association",
                            Losses = 0,
                            PointsAgainst = 0,
                            PointsFor = 0,
                            PythagoreanLosses = 0m,
                            PythagoreanWins = 0m,
                            SeasonId = 1920,
                            TeamName = "Cleveland Tigers",
                            Ties = 0,
                            Wins = 0
                        },
                        new
                        {
                            ID = 7,
                            Games = 0,
                            LeagueName = "American Professional Football Association",
                            Losses = 0,
                            PointsAgainst = 0,
                            PointsFor = 0,
                            PythagoreanLosses = 0m,
                            PythagoreanWins = 0m,
                            SeasonId = 1920,
                            TeamName = "Columbus Panhandles",
                            Ties = 0,
                            Wins = 0
                        },
                        new
                        {
                            ID = 8,
                            Games = 0,
                            LeagueName = "American Professional Football Association",
                            Losses = 0,
                            PointsAgainst = 0,
                            PointsFor = 0,
                            PythagoreanLosses = 0m,
                            PythagoreanWins = 0m,
                            SeasonId = 1920,
                            TeamName = "Dayton Triangles",
                            Ties = 0,
                            Wins = 0
                        },
                        new
                        {
                            ID = 9,
                            Games = 0,
                            LeagueName = "American Professional Football Association",
                            Losses = 0,
                            PointsAgainst = 0,
                            PointsFor = 0,
                            PythagoreanLosses = 0m,
                            PythagoreanWins = 0m,
                            SeasonId = 1920,
                            TeamName = "Decatur Staleys",
                            Ties = 0,
                            Wins = 0
                        },
                        new
                        {
                            ID = 10,
                            Games = 0,
                            LeagueName = "American Professional Football Association",
                            Losses = 0,
                            PointsAgainst = 0,
                            PointsFor = 0,
                            PythagoreanLosses = 0m,
                            PythagoreanWins = 0m,
                            SeasonId = 1920,
                            TeamName = "Detroit Heralds",
                            Ties = 0,
                            Wins = 0
                        },
                        new
                        {
                            ID = 11,
                            Games = 0,
                            LeagueName = "American Professional Football Association",
                            Losses = 0,
                            PointsAgainst = 0,
                            PointsFor = 0,
                            PythagoreanLosses = 0m,
                            PythagoreanWins = 0m,
                            SeasonId = 1920,
                            TeamName = "Hammond Pros",
                            Ties = 0,
                            Wins = 0
                        },
                        new
                        {
                            ID = 12,
                            Games = 0,
                            LeagueName = "American Professional Football Association",
                            Losses = 0,
                            PointsAgainst = 0,
                            PointsFor = 0,
                            PythagoreanLosses = 0m,
                            PythagoreanWins = 0m,
                            SeasonId = 1920,
                            TeamName = "Muncie Flyers",
                            Ties = 0,
                            Wins = 0
                        },
                        new
                        {
                            ID = 13,
                            Games = 0,
                            LeagueName = "American Professional Football Association",
                            Losses = 0,
                            PointsAgainst = 0,
                            PointsFor = 0,
                            PythagoreanLosses = 0m,
                            PythagoreanWins = 0m,
                            SeasonId = 1920,
                            TeamName = "Rochester Jeffersons",
                            Ties = 0,
                            Wins = 0
                        },
                        new
                        {
                            ID = 14,
                            Games = 0,
                            LeagueName = "American Professional Football Association",
                            Losses = 0,
                            PointsAgainst = 0,
                            PointsFor = 0,
                            PythagoreanLosses = 0m,
                            PythagoreanWins = 0m,
                            SeasonId = 1920,
                            TeamName = "Rock Island Independents",
                            Ties = 0,
                            Wins = 0
                        },
                        new
                        {
                            ID = 15,
                            Games = 0,
                            LeagueName = "American Professional Football Association",
                            Losses = 0,
                            PointsAgainst = 0,
                            PointsFor = 0,
                            PythagoreanLosses = 0m,
                            PythagoreanWins = 0m,
                            SeasonId = 1921,
                            TeamName = "Akron Pros",
                            Ties = 0,
                            Wins = 0
                        },
                        new
                        {
                            ID = 16,
                            Games = 0,
                            LeagueName = "American Professional Football Association",
                            Losses = 0,
                            PointsAgainst = 0,
                            PointsFor = 0,
                            PythagoreanLosses = 0m,
                            PythagoreanWins = 0m,
                            SeasonId = 1921,
                            TeamName = "Buffalo All-Americans",
                            Ties = 0,
                            Wins = 0
                        },
                        new
                        {
                            ID = 17,
                            Games = 0,
                            LeagueName = "American Professional Football Association",
                            Losses = 0,
                            PointsAgainst = 0,
                            PointsFor = 0,
                            PythagoreanLosses = 0m,
                            PythagoreanWins = 0m,
                            SeasonId = 1921,
                            TeamName = "Canton Bulldogs",
                            Ties = 0,
                            Wins = 0
                        },
                        new
                        {
                            ID = 18,
                            Games = 0,
                            LeagueName = "American Professional Football Association",
                            Losses = 0,
                            PointsAgainst = 0,
                            PointsFor = 0,
                            PythagoreanLosses = 0m,
                            PythagoreanWins = 0m,
                            SeasonId = 1921,
                            TeamName = "Chicago Cardinals",
                            Ties = 0,
                            Wins = 0
                        },
                        new
                        {
                            ID = 19,
                            Games = 0,
                            LeagueName = "American Professional Football Association",
                            Losses = 0,
                            PointsAgainst = 0,
                            PointsFor = 0,
                            PythagoreanLosses = 0m,
                            PythagoreanWins = 0m,
                            SeasonId = 1921,
                            TeamName = "Chicago Staleys",
                            Ties = 0,
                            Wins = 0
                        },
                        new
                        {
                            ID = 20,
                            Games = 0,
                            LeagueName = "American Professional Football Association",
                            Losses = 0,
                            PointsAgainst = 0,
                            PointsFor = 0,
                            PythagoreanLosses = 0m,
                            PythagoreanWins = 0m,
                            SeasonId = 1921,
                            TeamName = "Cincinnati Celts",
                            Ties = 0,
                            Wins = 0
                        },
                        new
                        {
                            ID = 21,
                            Games = 0,
                            LeagueName = "American Professional Football Association",
                            Losses = 0,
                            PointsAgainst = 0,
                            PointsFor = 0,
                            PythagoreanLosses = 0m,
                            PythagoreanWins = 0m,
                            SeasonId = 1921,
                            TeamName = "Cleveland Indians",
                            Ties = 0,
                            Wins = 0
                        },
                        new
                        {
                            ID = 22,
                            Games = 0,
                            LeagueName = "American Professional Football Association",
                            Losses = 0,
                            PointsAgainst = 0,
                            PointsFor = 0,
                            PythagoreanLosses = 0m,
                            PythagoreanWins = 0m,
                            SeasonId = 1921,
                            TeamName = "Columbus Panhandles",
                            Ties = 0,
                            Wins = 0
                        },
                        new
                        {
                            ID = 23,
                            Games = 0,
                            LeagueName = "American Professional Football Association",
                            Losses = 0,
                            PointsAgainst = 0,
                            PointsFor = 0,
                            PythagoreanLosses = 0m,
                            PythagoreanWins = 0m,
                            SeasonId = 1921,
                            TeamName = "Dayton Triangles",
                            Ties = 0,
                            Wins = 0
                        },
                        new
                        {
                            ID = 24,
                            Games = 0,
                            LeagueName = "American Professional Football Association",
                            Losses = 0,
                            PointsAgainst = 0,
                            PointsFor = 0,
                            PythagoreanLosses = 0m,
                            PythagoreanWins = 0m,
                            SeasonId = 1921,
                            TeamName = "Detroit Tigers",
                            Ties = 0,
                            Wins = 0
                        },
                        new
                        {
                            ID = 25,
                            Games = 0,
                            LeagueName = "American Professional Football Association",
                            Losses = 0,
                            PointsAgainst = 0,
                            PointsFor = 0,
                            PythagoreanLosses = 0m,
                            PythagoreanWins = 0m,
                            SeasonId = 1921,
                            TeamName = "Evansville Crimson Giants",
                            Ties = 0,
                            Wins = 0
                        },
                        new
                        {
                            ID = 26,
                            Games = 0,
                            LeagueName = "American Professional Football Association",
                            Losses = 0,
                            PointsAgainst = 0,
                            PointsFor = 0,
                            PythagoreanLosses = 0m,
                            PythagoreanWins = 0m,
                            SeasonId = 1921,
                            TeamName = "Green Bay Packers",
                            Ties = 0,
                            Wins = 0
                        },
                        new
                        {
                            ID = 27,
                            Games = 0,
                            LeagueName = "American Professional Football Association",
                            Losses = 0,
                            PointsAgainst = 0,
                            PointsFor = 0,
                            PythagoreanLosses = 0m,
                            PythagoreanWins = 0m,
                            SeasonId = 1921,
                            TeamName = "Hammond Pros",
                            Ties = 0,
                            Wins = 0
                        },
                        new
                        {
                            ID = 28,
                            Games = 0,
                            LeagueName = "American Professional Football Association",
                            Losses = 0,
                            PointsAgainst = 0,
                            PointsFor = 0,
                            PythagoreanLosses = 0m,
                            PythagoreanWins = 0m,
                            SeasonId = 1921,
                            TeamName = "Louisville Brocks",
                            Ties = 0,
                            Wins = 0
                        },
                        new
                        {
                            ID = 29,
                            Games = 0,
                            LeagueName = "American Professional Football Association",
                            Losses = 0,
                            PointsAgainst = 0,
                            PointsFor = 0,
                            PythagoreanLosses = 0m,
                            PythagoreanWins = 0m,
                            SeasonId = 1921,
                            TeamName = "Minneapolis Marines",
                            Ties = 0,
                            Wins = 0
                        },
                        new
                        {
                            ID = 30,
                            Games = 0,
                            LeagueName = "American Professional Football Association",
                            Losses = 0,
                            PointsAgainst = 0,
                            PointsFor = 0,
                            PythagoreanLosses = 0m,
                            PythagoreanWins = 0m,
                            SeasonId = 1921,
                            TeamName = "Muncie Flyers",
                            Ties = 0,
                            Wins = 0
                        },
                        new
                        {
                            ID = 31,
                            Games = 0,
                            LeagueName = "American Professional Football Association",
                            Losses = 0,
                            PointsAgainst = 0,
                            PointsFor = 0,
                            PythagoreanLosses = 0m,
                            PythagoreanWins = 0m,
                            SeasonId = 1921,
                            TeamName = "New York Brickley Giants",
                            Ties = 0,
                            Wins = 0
                        },
                        new
                        {
                            ID = 32,
                            Games = 0,
                            LeagueName = "American Professional Football Association",
                            Losses = 0,
                            PointsAgainst = 0,
                            PointsFor = 0,
                            PythagoreanLosses = 0m,
                            PythagoreanWins = 0m,
                            SeasonId = 1921,
                            TeamName = "Rochester Jeffersons",
                            Ties = 0,
                            Wins = 0
                        },
                        new
                        {
                            ID = 33,
                            Games = 0,
                            LeagueName = "American Professional Football Association",
                            Losses = 0,
                            PointsAgainst = 0,
                            PointsFor = 0,
                            PythagoreanLosses = 0m,
                            PythagoreanWins = 0m,
                            SeasonId = 1921,
                            TeamName = "Rock Island Independents",
                            Ties = 0,
                            Wins = 0
                        },
                        new
                        {
                            ID = 34,
                            Games = 0,
                            LeagueName = "American Professional Football Association",
                            Losses = 0,
                            PointsAgainst = 0,
                            PointsFor = 0,
                            PythagoreanLosses = 0m,
                            PythagoreanWins = 0m,
                            SeasonId = 1921,
                            TeamName = "Tonawanda Kardex",
                            Ties = 0,
                            Wins = 0
                        },
                        new
                        {
                            ID = 35,
                            Games = 0,
                            LeagueName = "American Professional Football Association",
                            Losses = 0,
                            PointsAgainst = 0,
                            PointsFor = 0,
                            PythagoreanLosses = 0m,
                            PythagoreanWins = 0m,
                            SeasonId = 1921,
                            TeamName = "Washington Senators",
                            Ties = 0,
                            Wins = 0
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
